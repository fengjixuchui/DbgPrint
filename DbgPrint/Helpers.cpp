#include "pch.h"
#include "Helpers.h"
#include "resource.h"
#include <winternl.h>
#include <dpfilter.h>

#pragma comment(lib, "ntdll")

PCSTR components[] = {
	"SYSTEM",
	"SMSS",
	"SETUP",
	"NTFS",
	"FSTUB",
	"CRASHDUMP",
	"CDAUDIO",
	"CDROM",
	"CLASSPNP",
	"DISK",
	"REDBOOK",
	"STORPROP",
	"SCSIPORT",
	"SCSIMINIPORT",
	"CONFIG",
	"I8042PRT",
	"SERMOUSE",
	"LSERMOUS",
	"KBDHID",
	"MOUHID",
	"KBDCLASS",
	"MOUCLASS",
	"TWOTRACK",
	"WMILIB",
	"ACPI",
	"AMLI",
	"HALIA64",
	"VIDEO",
	"SVCHOST",
	"VIDEOPRT",
	"TCPIP",
	"DMSYNTH",
	"NTOSPNP",
	"FASTFAT",
	"SAMSS",
	"PNPMGR",
	"NETAPI",
	"SCSERVER",
	"SCCLIENT",
	"SERIAL",
	"SERENUM",
	"UHCD",
	"RPCPROXY",
	"AUTOCHK",
	"DCOMSS",
	"UNIMODEM",
	"SIS",
	"FLTMGR",
	"WMICORE",
	"BURNENG",
	"IMAPI",
	"SXS",
	"FUSION",
	"IDLETASK",
	"SOFTPCI",
	"TAPE",
	"MCHGR",
	"IDEP",
	"PCIIDE",
	"FLOPPY",
	"FDC",
	"TERMSRV",
	"W32TIME",
	"PREFETCHER",
	"RSFILTER",
	"FCPORT",
	"PCI",
	"DMIO",
	"DMCONFIG",
	"DMADMIN",
	"WSOCKTRANSPORT",
	"VSS",
	"PNPMEM",
	"PROCESSOR",
	"DMSERVER",
	"SR",
	"INFINIBAND",
	"IHVDRIVER",
	"IHVVIDEO",
	"IHVAUDIO",
	"IHVNETWORK",
	"IHVSTREAMING",
	"IHVBUS",
	"HPS",
	"RTLTHREADPOOL",
	"LDR",
	"TCPIP6",
	"ISAPNP",
	"SHPC",
	"STORPORT",
	"STORMINIPORT",
	"PRINTSPOOLER",
	"VSSDYNDISK",
	"VERIFIER",
	"VDS",
	"VDSBAS",
	"VDSDYN",
	"VDSDYNDR",
	"VDSLDR",
	"VDSUTIL",
	"DFRGIFC",
	"DEFAULT",
	"MM",
	"DFSC",
	"WOW64",
	"ALPC",
	"WDI",
	"PERFLIB",
	"KTM",
	"IOSTRESS",
	"HEAP",
	"WHEA",
	"USERGDI",
	"MMCSS",
	"TPM",
	"THREADORDER",
	"ENVIRON",
	"EMS",
	"WDT",
	"FVEVOL",
	"NDIS",
	"NVCTRACE",
	"LUAFV",
	"APPCOMPAT",
	"USBSTOR",
	"SBP2PORT",
	"COVERAGE",
	"CACHEMGR",
	"MOUNTMGR",
	"CFR",
	"TXF",
	"KSECDD",
	"FLTREGRESS",
	"MPIO",
	"MSDSM",
	"UDFS",
	"PSHED",
	"STORVSP",
	"LSASS",
	"SSPICLI",
	"CNG",
	"EXFAT",
	"FILETRACE",
	"XSAVE",
	"SE",
	"DRIVEEXTENDER",
	"POWER",
	"CRASHDUMPXHCI",
	"GPIO",
	"REFS",
	"WER",
	"CAPIMG",
	"VPCI",
	"STORAGECLASSMEMORY",
	"FSLIB",
};

extern "C" NTSTATUS WINAPI NtSetDebugFilterState(
    ULONG ComponentId,
    ULONG Level,
    BOOLEAN State);

extern "C" ULONG WINAPI NtQueryDebugFilterState(
    __in ULONG ComponentId,
    __in ULONG Level);

void Helpers::ReportError(PCWSTR text, DWORD error) {
    PWSTR buffer;
    CString msg;
    if (::FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
        nullptr, error, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), (LPTSTR)&buffer, 0, nullptr)) {
        msg = buffer;
        ::LocalFree(buffer);
        msg.Trim(L"\n\r");
    }
    AtlMessageBox(nullptr, (PCWSTR)(text + msg), IDS_TITLE, MB_ICONERROR);
}

bool Helpers::EnableAllkernelOutput(bool enable) {
	for (int i = 0; i < _countof(components); i++) {
		auto status = NtSetDebugFilterState(i, 0xffffffff, enable);
		if (!NT_SUCCESS(status))
			return false;
	}
    return true;
}
